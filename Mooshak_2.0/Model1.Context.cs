//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mooshak_2._0
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VLN2_2016_H38Entities2 : DbContext
    {
        public VLN2_2016_H38Entities2()
            : base("name=VLN2_2016_H38Entities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int AddCourse(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCourse", nameParameter);
        }
    
        public virtual int AddUser(Nullable<int> userRolesId, string userName, string userUserName, string userPassWord, Nullable<int> userSsn, string userEmail)
        {
            var userRolesIdParameter = userRolesId.HasValue ?
                new ObjectParameter("UserRolesId", userRolesId) :
                new ObjectParameter("UserRolesId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userUserNameParameter = userUserName != null ?
                new ObjectParameter("UserUserName", userUserName) :
                new ObjectParameter("UserUserName", typeof(string));
    
            var userPassWordParameter = userPassWord != null ?
                new ObjectParameter("UserPassWord", userPassWord) :
                new ObjectParameter("UserPassWord", typeof(string));
    
            var userSsnParameter = userSsn.HasValue ?
                new ObjectParameter("UserSsn", userSsn) :
                new ObjectParameter("UserSsn", typeof(int));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUser", userRolesIdParameter, userNameParameter, userUserNameParameter, userPassWordParameter, userSsnParameter, userEmailParameter);
        }
    
        public virtual int AddUsersToCourses(Nullable<int> userId, Nullable<int> courseId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUsersToCourses", userIdParameter, courseIdParameter);
        }
    
        public virtual int DeleteCourse(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCourse", nameParameter);
        }
    
        public virtual int DeleteStudent(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStudent", nameParameter);
        }
    
        public virtual int DeleteTeacher(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTeacher", nameParameter);
        }
    
        public virtual ObjectResult<string> GetCourseByName(string courseName)
        {
            var courseNameParameter = courseName != null ?
                new ObjectParameter("CourseName", courseName) :
                new ObjectParameter("CourseName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCourseByName", courseNameParameter);
        }
    
        public virtual ObjectResult<string> GetCourses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCourses");
        }
    
        public virtual ObjectResult<string> GetCoursesByUser(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCoursesByUser", nameParameter);
        }
    
        public virtual ObjectResult<string> GetRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetRoles");
        }
    
        public virtual ObjectResult<string> GetStudents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetStudents");
        }
    
        public virtual ObjectResult<string> GetTeachers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetTeachers");
        }
    
        public virtual ObjectResult<GetUserByName_Result> GetUserByName(string serchName)
        {
            var serchNameParameter = serchName != null ?
                new ObjectParameter("SerchName", serchName) :
                new ObjectParameter("SerchName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserByName_Result>("GetUserByName", serchNameParameter);
        }
    
        public virtual int UppdateCourse(string searchName, string name)
        {
            var searchNameParameter = searchName != null ?
                new ObjectParameter("SearchName", searchName) :
                new ObjectParameter("SearchName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UppdateCourse", searchNameParameter, nameParameter);
        }
    
        public virtual int UppdateUser(string searchName, Nullable<int> userRolesId, string userName, string userUserName, string userPassWord, Nullable<int> userSsn, string userEmail)
        {
            var searchNameParameter = searchName != null ?
                new ObjectParameter("SearchName", searchName) :
                new ObjectParameter("SearchName", typeof(string));
    
            var userRolesIdParameter = userRolesId.HasValue ?
                new ObjectParameter("UserRolesId", userRolesId) :
                new ObjectParameter("UserRolesId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userUserNameParameter = userUserName != null ?
                new ObjectParameter("UserUserName", userUserName) :
                new ObjectParameter("UserUserName", typeof(string));
    
            var userPassWordParameter = userPassWord != null ?
                new ObjectParameter("UserPassWord", userPassWord) :
                new ObjectParameter("UserPassWord", typeof(string));
    
            var userSsnParameter = userSsn.HasValue ?
                new ObjectParameter("UserSsn", userSsn) :
                new ObjectParameter("UserSsn", typeof(int));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UppdateUser", searchNameParameter, userRolesIdParameter, userNameParameter, userUserNameParameter, userPassWordParameter, userSsnParameter, userEmailParameter);
        }
    }
}
